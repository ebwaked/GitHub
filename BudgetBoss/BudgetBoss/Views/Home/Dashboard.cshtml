@model BudgetBoss.Models.DashboardViewModel

@{
    ViewBag.Title = "Dashboard";
}
HELLO
<div id="wrapper">
    <div id="page-wrapper">
        <div class="container-fluid">
            <!-- Page Heading -->
            <div class="row">

                <h2>Dashboard</h2>

                <!-- Dashboard Information -->
                <div class="col-md-6 dashboardBox">
                    Hello @User.Identity.Name . Welcome to your dashboard.
                    <br />
                    <table class="table">
                        <tr>
                            <th>Account Name</th>
                            <th>Balance</th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model.HouseholdAccounts)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Balance)</td>
                                <td>
                                </td>
                            </tr>
                        }
                    </table>

                </div>
                <div class="col-md-6" style="float:right" >
                    <h2>Budget Breakdown</h2>
                    <div id="donutChart">
                        <div></div>
                    </div>
                </div>
                @*<div class="row col-md-12">
                    <h2>Account Monthly Budget Overview</h2>
                    <div id="accountMonthlyBudget"></div>
                </div>*@
            </div><!-- /.row -->
        </div>
    </div>
</div>

@section Scripts {
<script>
    Morris.Bar({
        element: 'accountMonthlyBudget',
        data: [
          { y: '2006', a: 100, b: 90 },
          { y: '2007', a: 75, b: 65 },
          { y: '2008', a: 50, b: 40 },
          { y: '2009', a: 75, b: 65 },
          { y: '2010', a: 50, b: 40 },
          { y: '2011', a: 75, b: 65 },
          { y: '2012', a: 100, b: 90 }
        ],
        xkey: 'y',
        ykeys: ['a', 'b'],
        labels: ['Budget', 'Actual']
    });
</script>

<script>
    $(document).ready(function () {
        console.log('begin ajax')
        $.ajax('', {
            type: "POST",
            url: "@Url.Action("GetChartData","Home")",

        }).then(function (response) {
            console.log(response)
            new Morris.Donut({
                element: 'donutChart',
                data: response
            });
        })
    })
</script>
<script>
    $(document).ready(function ()
    {
        console.log('begin ajax')
        $.ajax('', {
            type: "POST",
            url: "@Url.Action("GetChartData", "Home")",
        }).then(function (response)
        {

        })
    })
    Morris.Area({
        element: 'area-example',
        data: [
          { y: '2006', a: 100, b: 90 },
          { y: '2007', a: 75,  b: 65 },
          { y: '2008', a: 50,  b: 40 },
          { y: '2009', a: 75,  b: 65 },
          { y: '2010', a: 50,  b: 40 },
          { y: '2011', a: 75,  b: 65 },
          { y: '2012', a: 100, b: 90 }
        ],
        xkey: 'y',
        ykeys: ['a', 'b'],
        labels: ['Series A', 'Series B']
</script>
}